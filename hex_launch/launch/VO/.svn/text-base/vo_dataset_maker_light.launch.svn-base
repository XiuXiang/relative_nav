<!-- Use this file to open everything for the visual odometry and save the data (without images) 
     This demo relies on truth from cortex, the hexacopter, flying with a Xtion and computer.
-->
<launch>
  <!-- use this to pass a name for the mocap global reference frame --> 
  <arg name="global_frame_name" value="mocap" />  

  <arg name="markerset_name"    value="heavy_ros/base" /> <!-- pass in the name of the markerset - to set the right names in tf -->

  <!-- Namespace for the openni camera stuff - also used to name tf's -->
  <arg name="camera" value="camera" />

  <!-- Background stuff: truth, openni-->
  <include file="$(find hex_launch)/launch/includes/background.launch" >
    <arg name="global_frame_name" value="$(arg global_frame_name)" />      
    <arg name="kickstart_name"    value="kickstart_heavy" /> <!-- pass in the name of the kickstart to use to get the right markerset --> 
    <arg name="markerset_name"    value="$(arg markerset_name)" /> <!-- pass in the name of the markerset - to set the right names in tf -->
    <arg name="inter_trans"       value="0.104 0.015 -0.075 0 0 0" /> <!-- default (X Y Z Yaw Pitch Roll) transformation between mocap body frame and the openni camera_link frame -->
    <arg name="camera"            value="$(arg camera)" /> 
  </include>

  <!-- Now start the VO (parameters are available to be set as arguments if desired)--> 
  <include file="$(find kinect_vo)/launch/vo_basic_launch.launch" />
  
  <!-- Start the IMU and Altimeters -->
  <!-- Microstrain IMU -->
  <include file="$(find microstrain_3dmgx2_imu)/microstrain_3dmgx2.launch" >
    <arg name="autocalibrate" value="true" />
  </include>
  
  <!-- hex IMU -->
  <node pkg= "mikro_serial" type="MikoControl" name="mikro_comm" >
	  <param name="/debug_data_rate" value="50" /> <!-- Value is multiplied by 10 in receiver and then used as milliseconds. -->
  </node> 
  
  <!-- Altimeter node: note there are arguments we could set here and map down. -->
  <include file="$(find altimeter_node)/launch/alt_node.launch" /> 
  
  <!-- Start the script that records data to the rosbag -->
  <node name="ros_record" pkg="kinect_vo" type="vo_light_record.sh" />
  
</launch>
