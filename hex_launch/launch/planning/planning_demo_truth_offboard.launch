<!-- Use this file to open the openni stuff, the hex_planner, and the mikro         
    serial.  The truth will be opened on the groundstation computer as well as 
    the controller (for now).  
    Then the hex will be flown based on the paths developed. 
-->
<launch>
  <!-- use this to pass a name for the mocap global reference frame --> 
  <arg name="global_frame_name" value="mocap" />  

  <arg name="markerset_name"    value="heavy_ros/base" /> <!-- pass in the name of the markerset - to set the right names in tf -->

  <!-- Namespace for the openni camera stuff - also used to name tf's -->
  <arg name="camera" value="camera" />
  
  <!-- Allows openni to register the depth camera with the RGB camera -->
  <arg name="depth_registration"  default="true" /> 
  
  <!-- working at 15Hz (every other image) when this is 1 -->
  <arg name="data_skip_param"     default="1" />


  <!-- Start the Nodes: -->

  <!-- Openni stuff -->
  <include file="$(find hex_launch)/launch/includes/pts_to_laser.launch" >
    <arg name="data_skip_param"         value="$(arg data_skip_param)" />  
    <arg name="camera"                  value="$(arg camera)" />
    <arg name="depth_registration"      value="$(arg depth_registration)" />
  </include>

  <!-- Costmap and Planner Stuff -->
  <include file="$(find hex_planner)/launch/basic.launch" >
    <arg name="global_frame" value="$(arg global_frame_name)" />
    <arg name="robot_base_frame" value="$(arg global_frame_name)/$(arg markerset_name)" /> <!-- the tf name of the robot base -->
    <arg name="yaml_filename" value="hexplanner_costmap_param.yaml" /> <!-- the name of the file where all the other costmap2d parameters are set -->
  </include>
  
    <!-- Start service to take control commands and relay them to the hex -->
  <node pkg= "mikro_serial" type="MikoControl" name="mikro_comm" >
	  <param name="/debug_data_rate" value="50" /> 
  </node> 
  
</launch>
