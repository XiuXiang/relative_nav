<!-- launch file for remotely computing control for the hexacopter, using truth 
     (This launch file also launches the truth)-->

<launch>

  <!-- Truth Stuff -->
  <!-- use this to pass a name for the mocap global reference frame -->
  <arg name="global_frame_name" default="mocap" />    
  <!-- pass in the name of the kickstart to use to get the right markerset -->
  <arg name="kickstart_name" default="kickstart_heavy" /> 
  <!-- pass in the name of the markerset - to set the right names in tf --> 
  <arg name="markerset_name"    value="heavy_ros/base" /> 
  
  <include file="$(find evart_bridge)/launch/general_launch.launch" >
    <arg name="global_frame_name"            value="$(arg global_frame_name)" />
    <arg name="kickstart_name"               value="$(arg kickstart_name)" />
  </include>
  

  <!-- Below shows how to edit the private parameters for this node: /-->
  <node pkg= "diff_flat_control" type="diff_flat_control" name="controller" >
	  <param name="/truth_control" value="true" type="bool"/> 
    <param name="/allow_integral_control" value="false"/>
    <param name="/seconds_to_hover" value="120000" />
  <!-- Example of using relative paths for cross-system functionality: /-->
	  <param name="/gain_file_path" value="$(find diff_flat_control)/Matlab/HeavyGainMatrices.txt" type="string"/>
  </node>
  
  
    <!-- default transform between /$(arg global_frame_name)_$(arg markerset_name) /$(arg camera)_link -->
  <arg name="inter_trans" default="0 0 0 0 0 0" /> 
  
    <!-- Start service to take control commands and relay them to the hex -->
  <node pkg= "mikro_serial" type="MikoControl" name="mikro_comm" >
	  <param name="/debug_data_rate" value="200" /> 
  </node> 
  
    <!-- Launch a static transform publisher to link the evart_bridge and Openni tf trees -->
    <node pkg="tf" type="static_transform_publisher" name="$(arg global_frame_name)_static_convert"
          args="$(arg inter_trans)  /$(arg global_frame_name)/$(arg markerset_name) /camera_link 100" />

  
  <!-- Start the script that records data to the rosbag -->
  <node name="ros_control_record" pkg="diff_flat_control" type="control_record.sh" />

</launch>
